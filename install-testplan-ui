#!/usr/bin/env python
"""
Install & Build the Testplan UI code.
  * "npm install" - install the necessary dependencies under node_modules
    directory.
  * "npm run build" - build the Testplan UI, place it under build directory.
"""
import subprocess
import argparse
import logging
import sys
import os

from testplan import web_ui

TESTPLAN_UI_DIR = os.path.join(
    os.path.dirname(web_ui.__file__),
    'testing'
)
BATCH_REPORT_APPNAME = "batch_report"
INTERACTIVE_APPNAME = "interactive_report"

logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)


def parse_cli_args():
    """Parse cli args."""
    parser = argparse.ArgumentParser(description='Run this script to install & '
                                                 'build the Testplan UI.')
    parser.add_argument('-v', '--verbose', action='store_true', dest='verbose',
                        help='Display verbose logs (stdout from npm commands).')
    parser.add_argument('-d', '--dev', action='store_true', dest='dev',
                        help='Install dev dependencies, use if developing UI.')
    parser.add_argument('-p', '--path', action='store', dest='path',
                        default=TESTPLAN_UI_DIR,
                        help='The path to the testplan UI directory.')
    return parser.parse_args()


def npm_installed():
    """Check if npm has been installed."""
    with open(os.devnull, 'w') as FNULL:
        try:
            subprocess.check_call('npm --version', shell=True, stdout=FNULL)
        except subprocess.CalledProcessError:
            return False
        else:
            return True


def install_and_build_ui(path=TESTPLAN_UI_DIR, dev=False):
    """
    Install dependencies & build JS code.

    :param path: Where to install dev dependencies.
    :type path: ``str``
    :param dev: Whether to install dev dependencies, use if developing UI.
    :type dev: ``bool``
    :param verbose: Display verbose logs (stdout and stderr from npm commands).
    :type verbose: ``bool``
    """

    if not npm_installed():
        logging.warning('='*54)
        logging.warning('NPM NOT INSTALLED.')
        logging.warning('Testplan UI is built using npm, please follow these')
        logging.warning('instructions to install https://www.npmjs.com/get-npm')
        logging.warning('='*54)
        sys.exit(1)

    logging.info('Installing Testplan UI dependencies...')

    for app_name in ('', BATCH_REPORT_APPNAME, INTERACTIVE_APPNAME):
        app_dir = os.path.join(path, app_name)
        logging.info('Installing dependencies to path: %s',
                     os.path.abspath(app_dir))
        cmd = ['npm', 'install', '--no-package-lock']
        if not dev:
            cmd.append('--production')
        subprocess.check_call(cmd, cwd=app_dir)
        logging.info('Building %s', app_dir)
        subprocess.check_call(['npm', 'run', 'build'], cwd=app_dir)

    logging.info(
        'Testplan UI install & build have completed successfully.')


if __name__ == '__main__':
    args = parse_cli_args()
    install_and_build_ui(path=args.path, dev=args.dev)
