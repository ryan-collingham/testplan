// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DocumentationButton Renders a clickable documentation button 1`] = `
<NavItem
  tag="li"
>
  <a
    className="buttonsBar_13xq1v"
    href="http://testplan.readthedocs.io"
    rel="noopener noreferrer"
    target="_blank"
  >
    <FontAwesomeIcon
      border={false}
      className="toolbarButton_z1gq62"
      fixedWidth={false}
      flip={null}
      icon="book"
      inverse={false}
      key="toolbar-document"
      listItem={false}
      mask={null}
      pull={null}
      pulse={false}
      rotation={null}
      size={null}
      spin={false}
      symbol={false}
      title="Documentation"
      transform={null}
    />
  </a>
</NavItem>
`;

exports[`FilterButton Renders a filter dropdown 1`] = `
<UncontrolledDropdown
  inNavbar={true}
  nav={true}
>
  <div
    className="buttonsBar_13xq1v"
  >
    <DropdownToggle
      aria-haspopup={true}
      className="passed"
      color="secondary"
      nav={true}
    >
      <FontAwesomeIcon
        border={false}
        className="toolbarButton_z1gq62"
        fixedWidth={false}
        flip={null}
        icon="filter"
        inverse={false}
        key="toolbar-filter"
        listItem={false}
        mask={null}
        pull={null}
        pulse={false}
        rotation={null}
        size={null}
        spin={false}
        symbol={false}
        title="Choose filter"
        transform={null}
      />
    </DropdownToggle>
  </div>
  <DropdownMenu
    className="filterDropdown_biw13d"
    flip={true}
    tag="div"
  >
    <DropdownItem
      className="dropdownItem_1bl0z5g"
      tag="button"
      toggle={false}
    >
      <Label
        check={true}
        className="filterLabel_17zzvy"
        tag="label"
        widths={
          Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ]
        }
      >
        <Input
          checked={true}
          name="filter"
          onChange={[MockFunction]}
          type="radio"
          value="all"
        />
         
        All
      </Label>
    </DropdownItem>
    <DropdownItem
      className="dropdownItem_1bl0z5g"
      tag="button"
      toggle={false}
    >
      <Label
        check={true}
        className="filterLabel_17zzvy"
        tag="label"
        widths={
          Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ]
        }
      >
        <Input
          checked={false}
          name="filter"
          onChange={[MockFunction]}
          type="radio"
          value="fail"
        />
         
        Failed only
      </Label>
    </DropdownItem>
    <DropdownItem
      className="dropdownItem_1bl0z5g"
      tag="button"
      toggle={false}
    >
      <Label
        check={true}
        className="filterLabel_17zzvy"
        tag="label"
        widths={
          Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ]
        }
      >
        <Input
          checked={false}
          name="filter"
          onChange={[MockFunction]}
          type="radio"
          value="pass"
        />
         
        Passed only
      </Label>
    </DropdownItem>
    <DropdownItem
      divider={true}
      tag="button"
      toggle={true}
    />
    <DropdownItem
      className="dropdownItem_1bl0z5g"
      tag="button"
      toggle={false}
    >
      <Label
        check={true}
        className="filterLabel_17zzvy"
        tag="label"
        widths={
          Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ]
        }
      >
        <Input
          checked={true}
          name="displayEmptyTest"
          type="checkbox"
        />
         
        Hide empty testcase
      </Label>
    </DropdownItem>
  </DropdownMenu>
</UncontrolledDropdown>
`;

exports[`HelpButton Renders a clickable help button 1`] = `
<NavItem
  tag="li"
>
  <div
    className="buttonsBar_13xq1v"
  >
    <FontAwesomeIcon
      border={false}
      className="toolbarButton_z1gq62"
      fixedWidth={false}
      flip={null}
      icon="question-circle"
      inverse={false}
      key="toolbar-question"
      listItem={false}
      mask={null}
      onClick={[MockFunction]}
      pull={null}
      pulse={false}
      rotation={null}
      size={null}
      spin={false}
      symbol={false}
      title="Help"
      transform={null}
    />
  </div>
</NavItem>
`;

exports[`InfoButton Renders a clickable info button 1`] = `
<NavItem
  tag="li"
>
  <div
    className="buttonsBar_13xq1v"
  >
    <FontAwesomeIcon
      border={false}
      className="toolbarButton_z1gq62"
      fixedWidth={false}
      flip={null}
      icon="info"
      inverse={false}
      key="toolbar-info"
      listItem={false}
      mask={null}
      onClick={[MockFunction]}
      pull={null}
      pulse={false}
      rotation={null}
      size={null}
      spin={false}
      symbol={false}
      title="Info"
      transform={null}
    />
  </div>
</NavItem>
`;

exports[`PrintButton Renders a clickable documentation button 1`] = `
<NavItem
  tag="li"
>
  <div
    className="buttonsBar_13xq1v"
  >
    <FontAwesomeIcon
      border={false}
      className="toolbarButton_z1gq62"
      fixedWidth={false}
      flip={null}
      icon="print"
      inverse={false}
      key="toolbar-print"
      listItem={false}
      mask={null}
      onClick={[Function]}
      pull={null}
      pulse={false}
      rotation={null}
      size={null}
      spin={false}
      symbol={false}
      title="Print page"
      transform={null}
    />
  </div>
</NavItem>
`;

exports[`ResetButton Renders a clickable button 1`] = `
<NavItem
  key="reset-button"
  tag="li"
>
  <div
    className="buttonsBar_13xq1v"
  >
    <FontAwesomeIcon
      border={false}
      className="toolbarButton_z1gq62"
      fixedWidth={false}
      flip={null}
      icon={
        Object {
          "icon": Array [
            640,
            512,
            Array [],
            "f55a",
            "M576 64H205.26A63.97 63.97 0 0 0 160 82.75L9.37 233.37c-12.5 12.5-12.5 32.76 0 45.25L160 429.25c12 12 28.28 18.75 45.25 18.75H576c35.35 0 64-28.65 64-64V128c0-35.35-28.65-64-64-64zm-84.69 254.06c6.25 6.25 6.25 16.38 0 22.63l-22.62 22.62c-6.25 6.25-16.38 6.25-22.63 0L384 301.25l-62.06 62.06c-6.25 6.25-16.38 6.25-22.63 0l-22.62-22.62c-6.25-6.25-6.25-16.38 0-22.63L338.75 256l-62.06-62.06c-6.25-6.25-6.25-16.38 0-22.63l22.62-22.62c6.25-6.25 16.38-6.25 22.63 0L384 210.75l62.06-62.06c6.25-6.25 16.38-6.25 22.63 0l22.62 22.62c6.25 6.25 6.25 16.38 0 22.63L429.25 256l62.06 62.06z",
          ],
          "iconName": "backspace",
          "prefix": "fas",
        }
      }
      inverse={false}
      key="toolbar-reset"
      listItem={false}
      mask={null}
      onClick={[MockFunction]}
      pull={null}
      pulse={false}
      rotation={null}
      size={null}
      spin={false}
      symbol={false}
      title="Reset state"
      transform={null}
    />
  </div>
</NavItem>
`;

exports[`ResetButton Renders a spinning icon when reset is in-progress 1`] = `
<NavItem
  key="reset-button"
  tag="li"
>
  <div
    className="buttonsBar_13xq1v"
  >
    <FontAwesomeIcon
      border={false}
      className="toolbarButton_z1gq62-o_O-toolbarInactive_51g7gx"
      fixedWidth={false}
      flip={null}
      icon={
        Object {
          "icon": Array [
            640,
            512,
            Array [],
            "f55a",
            "M576 64H205.26A63.97 63.97 0 0 0 160 82.75L9.37 233.37c-12.5 12.5-12.5 32.76 0 45.25L160 429.25c12 12 28.28 18.75 45.25 18.75H576c35.35 0 64-28.65 64-64V128c0-35.35-28.65-64-64-64zm-84.69 254.06c6.25 6.25 6.25 16.38 0 22.63l-22.62 22.62c-6.25 6.25-16.38 6.25-22.63 0L384 301.25l-62.06 62.06c-6.25 6.25-16.38 6.25-22.63 0l-22.62-22.62c-6.25-6.25-6.25-16.38 0-22.63L338.75 256l-62.06-62.06c-6.25-6.25-6.25-16.38 0-22.63l22.62-22.62c6.25-6.25 16.38-6.25 22.63 0L384 210.75l62.06-62.06c6.25-6.25 16.38-6.25 22.63 0l22.62 22.62c6.25 6.25 6.25 16.38 0 22.63L429.25 256l62.06 62.06z",
          ],
          "iconName": "backspace",
          "prefix": "fas",
        }
      }
      inverse={false}
      key="toolbar-reset"
      listItem={false}
      mask={null}
      pull={null}
      pulse={false}
      rotation={null}
      size={null}
      spin={false}
      symbol={false}
      title="Resetting..."
      transform={null}
    />
  </div>
</NavItem>
`;

exports[`TagsButton Renders a clickable tags button 1`] = `
<NavItem
  tag="li"
>
  <div
    className="buttonsBar_13xq1v"
  >
    <FontAwesomeIcon
      border={false}
      className="toolbarButton_z1gq62"
      fixedWidth={false}
      flip={null}
      icon="tags"
      inverse={false}
      key="toolbar-tags"
      listItem={false}
      mask={null}
      onClick={[MockFunction]}
      pull={null}
      pulse={false}
      rotation={null}
      size={null}
      spin={false}
      symbol={false}
      title="Toggle tags"
      transform={null}
    />
  </div>
</NavItem>
`;
